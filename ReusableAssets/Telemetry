
Project Title: PulseWatch – Real-Time Resilience Pulse of Every Application

Project Description:
PulseWatch is a real-time, AI-powered dashboard that monitors the health and resilience of every critical system in J.P. Morgan Chase. It acts as a live “resilience scorecard” – much like a Fitbit for production systems – tracking system stability, stress tolerance, alert noise, and incident recovery capacity. PulseWatch delivers a simple Resilience Pulse Score (0–100) for each application and environment, helping engineering, operations, and leadership teams make proactive, data-driven decisions to strengthen technology resilience.

Project Benefits:

Provides a clear, single-glance understanding of each system’s resilience posture

Empowers teams to proactively address fragility before failure occurs

Creates accountability without blame – a collaborative improvement tool

Improves cross-team visibility for control health, system readiness, and alert behavior

Encourages “design for recovery” culture across application lifecycles

Required Skillset:

Telemetry Integration (OpenTelemetry, CloudWatch, Dynatrace)

Python, FastAPI (Resilience Score Calculation Engine)

Machine Learning (anomaly scoring, weighted scoring models)

React, D3.js or Dash (frontend resilience dashboards)

LangChain + LLM (recommendation generation for score improvements)

Git/Snowflake/ServiceNow integration for incident & change history

Abstract Details - Section 1: Technical Implementation
PulseWatch has three core layers:

Data Aggregation Layer:

Collects data from existing telemetry sources: error rates, alert patterns, retry logs, change velocity, deployment history

Pulls incident history from ServiceNow or internal ticketing tools

Hooks into Git/Snowflake to understand control edits, failed deployments, and drift behavior

Resilience Score Engine:

Each system is scored in real time based on weighted inputs:

Alert fatigue index (alerts/hour + noise ratio)

Recovery readiness (presence of fallback, rollback success, retry efficacy)

Change turbulence (changes/deployments/rollbacks in last 7 days)

Control coverage (number and quality of preventive/mitigating controls)

Incident frequency & MTTR

Score is normalized and color-coded: Green (80–100), Yellow (60–79), Red (<60)

AI Recommendation Layer:

Uses prompt-based GenAI reasoning to generate suggestions:

“Split batch job X into microservices”

“Add retry + alert suppression on known error 502 pattern”

“Test failover flow quarterly”

Suggestions are human-readable, linkable to playbooks, and trackable via JIRA

Abstract Details - Section 2: Business Application & Differentiation
PulseWatch offers tailored dashboards for different stakeholders:

Executives get a portfolio-wide pulse map of critical systems with trendlines and ownership clarity

Developers see their application’s weaknesses and receive specific design coaching

Ops teams can prioritize work on noisy or fragile systems before issues spike

Control & Risk teams can track control effectiveness over time and overlay incident trends

Sample scenario:

System ABC gets a PulseScore of 55: recent alert spike, no fallbacks, repeated batch failure, 2 failed deploys

PulseWatch shows the causes and proposes three design/code/process fixes

Team applies changes → score improves to 83 → visual progress report is shared in the next monthly risk review

Individual Value – Call to Action:
PulseWatch is more than a dashboard – it’s a resilience assistant. For every system owner, this tool answers: “How healthy is my system today, and how much stress can it take tomorrow?”

If you're a developer, ops lead, or business system owner, PulseWatch helps you show progress, catch early fragility, and improve design before problems escalate.

Join the #pulsewatch-devup initiative to onboard your app and get your first resilience score today.

Voting Tracks:

Protect the Firm

Engineering Excellence

Architecture

Technology Modernization
